{"version":3,"file":"component---src-pages-game-portal-js-251c9b1094d3ff02cdfb.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/cards/GameCard.js","webpack://gatsby-starter-default/./src/components/buttons/MenuButton.js","webpack://gatsby-starter-default/./src/data/gamePortalData.js","webpack://gatsby-starter-default/./src/components/layout/GameHeader.js","webpack://gatsby-starter-default/./src/components/sections/auth/UnauthorizedSection.js","webpack://gatsby-starter-default/./src/components/textfield/ReusableTextField.js","webpack://gatsby-starter-default/./src/data/gameAllData.js","webpack://gatsby-starter-default/./src/data/gameRecentData.js","webpack://gatsby-starter-default/./src/components/sections/GameSection.js","webpack://gatsby-starter-default/./src/pages/game-portal.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MediumText, H2 } from \"../styles/TextStyles\";\r\nimport { Link } from \"gatsby\";\r\n\r\nexport default function GameCard(props) {\r\n  const {\r\n    title,\r\n    description,\r\n    color,\r\n    icon,\r\n    iconSize,\r\n    path,\r\n    outsidePath,\r\n  } = props;\r\n\r\n  function returnLink(title, path) {\r\n    return (\r\n      <Link to={path}>\r\n        <Wrapper color={color}>\r\n          <CardWrapper>\r\n            <TextWrapper>\r\n              <GameTitle>{title}</GameTitle>\r\n              <Description>{description}</Description>\r\n            </TextWrapper>\r\n            <IconWrapper iconSize={iconSize}>\r\n              <img src={icon} alt=\"Icon\" className=\"icebreakericon\" />\r\n            </IconWrapper>\r\n          </CardWrapper>\r\n        </Wrapper>\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  function returnOutsideLink(title, path) {\r\n    return (\r\n      <a href={path}>\r\n        <Wrapper color={color}>\r\n          <CardWrapper>\r\n            <TextWrapper>\r\n              <GameTitle>{title}</GameTitle>\r\n              <Description>{description}</Description>\r\n            </TextWrapper>\r\n            <IconWrapper iconSize={iconSize}>\r\n              <img src={icon} alt=\"Icon\" className=\"icebreakericon\" />\r\n            </IconWrapper>\r\n          </CardWrapper>\r\n        </Wrapper>\r\n      </a>\r\n    );\r\n  }\r\n\r\n  function returnNoLink(title) {\r\n    return (\r\n      <Wrapper color={color}>\r\n        <CardWrapper>\r\n          <TextWrapper>\r\n            <GameTitle>{title}</GameTitle>\r\n            <Description>{description}</Description>\r\n          </TextWrapper>\r\n          <IconWrapper iconSize={iconSize}>\r\n            <img src={icon} alt=\"Icon\" className=\"icebreakericon\" />\r\n          </IconWrapper>\r\n        </CardWrapper>\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  return path !== undefined\r\n    ? outsidePath === true\r\n      ? returnOutsideLink(title, path)\r\n      : returnLink(title, path)\r\n    : returnNoLink(title);\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 247px;\r\n  padding: 20px;\r\n  background: ${(props) => (props.color ? props.color : \"black\")};\r\n  border: 0.5px solid rgba(255, 255, 255, 0.3);\r\n  box-shadow: 0px 30px 60px rgba(99, 30, 187, 0.5);\r\n  backdrop-filter: blur(20px);\r\n  mix-blend-mode: screen;\r\n  border-radius: 30px;\r\n  :hover {\r\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1),\r\n      0px 30px 60px rgba(23, 0, 102, 0.5),\r\n      inset 0px 0px 0px 0.5px rgba(255, 255, 255, 0.5);\r\n    transform: translateY(-3px);\r\n    transition: 1s cubic-bezier(0.075, 0.82, 0.165, 1);\r\n  }\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-rows: auto auto;\r\n  gap: 35px;\r\n`;\r\n\r\nconst GameTitle = styled(H2)`\r\n  height: 100px;\r\n  text-align: start;\r\n  padding-top: 30px;\r\n  color: black;\r\n  font-weight: 300;\r\n`;\r\n\r\nconst Description = styled(MediumText)`\r\n  color: black;\r\n`;\r\nconst IconWrapper = styled.div`\r\n  img {\r\n    width: ${(props) => (props.iconSize ? props.iconSize : \"75px\")};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"gatsby\";\r\nexport default function MenuButton(props) {\r\n  const { item } = props;\r\n  return (\r\n    <Link to={item.link} onClick={props.onClick}>\r\n      <MenuItem title={item.title} icon={item.icon}>\r\n        <Title>\r\n          {props.icon !== \"\" ? <img src={item.icon} /> : null}\r\n          {item.title}\r\n        </Title>\r\n      </MenuItem>\r\n    </Link>\r\n  );\r\n}\r\n\r\nconst MenuItem = styled.div`\r\n  color: black;\r\n  display: grid;\r\n  height: 44px;\r\n  grid-template-columns: ${(props) => (props.icon ? \"24px auto\" : \"auto\")};\r\n  gap: ${(props) => (props.title ? \"10px\" : \"0px\")};\r\n  padding: 10px;\r\n  transition: 0.5s ease-out;\r\n  border-radius: 10px;\r\n\r\n  :hover {\r\n    background: rgba(0, 0, 0, 0.1);\r\n    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.1),\r\n      inset 0px 0px 0px 0.5px rgba(255, 255, 255, 0.2);\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","export const gamePortalData = [\r\n  {\r\n    title: \"Logout\",\r\n    link: \"/\",\r\n    icon: \"\",\r\n  },\r\n];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\nimport MenuButton from \"../buttons/MenuButton\";\r\nimport { H2 } from \"../styles/TextStyles\";\r\nimport { gamePortalData } from \"../../data/gamePortalData\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nexport default function Header() {\r\n  const cookies = new Cookies();\r\n  const isAdmin = cookies.get(\"admin\");\r\n  const [adminGamePortalData, setAdminGamePortalData] = useState(\r\n    gamePortalData\r\n  );\r\n  useEffect(() => {\r\n    if (isAdmin == \"true\") {\r\n      setAdminGamePortalData(\r\n        gamePortalData.concat([\r\n          {\r\n            title: \"Admin Portal\",\r\n            link: \"/admin-portal/home\",\r\n            icon: \"\",\r\n          },\r\n        ])\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LinkWrapper>\r\n        <Link to={\"/game-portal\"}>\r\n          <img src=\"/images/logos/logo-black.svg\" alt=\"Logo\" />\r\n        </Link>\r\n      </LinkWrapper>\r\n      <MenuWrapper count={adminGamePortalData.length}>\r\n        {adminGamePortalData.map((item, index) => (\r\n          <MenuButton item={item} key={index} onClick={item.onClick} />\r\n        ))}\r\n      </MenuWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst LinkWrapper = styled.div`\r\n  width: 150px;\r\n  @media (max-width: 450px) {\r\n    width: 44px;\r\n  }\r\n  img {\r\n    height: 150px;\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 60px;\r\n  display: grid;\r\n  grid-template-columns: 500px auto;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  padding: 0 30px;\r\n  align-items: center;\r\n\r\n  @media (max-width: 768px) {\r\n    top: 30px;\r\n  }\r\n  @media (max-width: 450px) {\r\n    top: 20px;\r\n    padding: 0 20px;\r\n    grid-template-columns: 100px auto;\r\n  }\r\n`;\r\n\r\nconst MenuWrapper = styled.div`\r\n  display: grid;\r\n  gap: 30px;\r\n  grid-template-columns: repeat(${(props) => props.count}, auto);\r\n`;\r\n\r\nconst HamburgerWrapper = styled.div`\r\n  display: none;\r\n  @media (max-width: 768px) {\r\n    display: block;\r\n  } ;\r\n`;\r\nconst Title = styled(H2)`\r\n  color: black;\r\n  opacity: 0.8;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect } from \"react\";\r\nimport { H1 } from \"../../styles/TextStyles\";\r\nimport { navigate } from \"gatsby\";\r\n\r\nexport default function UnauthorizedSection() {\r\n  useEffect(() => {\r\n    setTimeout(function () {\r\n      navigate(\"/auth\");\r\n    }, 4000);\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ContentWrapper>\r\n        <TextWrapper>\r\n          <Title>\r\n            Oops! Your session expired. Taking you back to the login screen.\r\n          </Title>\r\n        </TextWrapper>\r\n      </ContentWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  display: grid;\r\n  width: 100%;\r\n  top: 200px;\r\n  height: 800px;\r\n  align-content: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: grid;\r\n  height: 200px;\r\n  margin: 0 auto;\r\n  width: 75%;\r\n  justify-content: center;\r\n  align-content: center;\r\n  gap: 30px;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  display: grid;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Title = styled(H1)`\r\n  background: radial-gradient(\r\n    218.51% 281.09% at 100% 100%,\r\n    rgba(49, 220, 113, 0.6) 0%,\r\n    rgba(76, 0, 200, 0.6) 45.83%,\r\n    rgba(76, 0, 200, 0.6) 100%\r\n  );\r\n  background-clip: text;\r\n  -webkit-background-clip: text;\r\n  color: transparent;\r\n  font-size: 48;\r\n  text-align: center;\r\n  line-break: auto;\r\n  padding: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SmallText } from \"../styles/TextStyles\";\r\n\r\nexport default function ReusableTextField(props) {\r\n  const { title, onChange, value, label } = props;\r\n  const type = \"text\";\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Label>{label}</Label>\r\n        <InputField\r\n          name={title || \"Field\"}\r\n          type={type}\r\n          value={value}\r\n          placeholder={title}\r\n          onChange={(e) => onChange(e)}\r\n          minLength=\"1\"\r\n          maxLength=\"100\"\r\n          required\r\n        />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 25px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: left;\r\n  position: relative;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n  background: #f8f8f8;\r\n  border: 1px solid #d8d8d8;\r\n  border-radius: 4px;\r\n  padding: 0px 12px;\r\n  height: 36px;\r\n  margin: 0;\r\n\r\n  &::placeholder {\r\n    color: #757575;\r\n    font-size: 12px;\r\n    line-height: 21px;\r\n  }\r\n`;\r\n\r\nconst Label = styled(SmallText)`\r\n  margin-bottom: 6px;\r\n  text-align: left;\r\n\r\n  color: black;\r\n  line-height: 16px;\r\n`;\r\n","const color =\r\n  \"radial-gradient(218.51% 281.09% at 100% 100%, rgba(253, 63, 51, 0.7) 0%, rgba(76, 0, 200, 0.7) 45.83%, rgba(76, 0, 200, 0.7) 100%)\";\r\n\r\nexport const gameAllData = [\r\n  {\r\n    title: \"Ice Breakers\",\r\n    description: \"Let's break that awkward silence in your team!\",\r\n    color:\r\n      \"radial-gradient(218.51% 281.09% at 100% 100%, rgba(179, 202, 248, 0.6) 0%, rgba(181, 205, 251, 0.6) 45.83%, rgba(253, 63, 51, 0.6) 100%)\",\r\n    icon: \"images/icons/icebreakericon.svg\",\r\n    path: \"/icebreaker\",\r\n    outsidePath: false,\r\n  },\r\n  {\r\n    title: \"Image Puzzle\",\r\n    description: \"Team work makes the dream work\",\r\n    color:\r\n      \"radial-gradient(218.51% 281.09% at 100% 100%, rgba(189, 202, 236, 0.6) 0%, rgba(233, 225, 255, 0.6) 45.83%, rgba(253, 63, 51, 0.6) 100%)\",\r\n    icon: \"images/icons/imagePuzzleIcon.svg\",\r\n    path: \"https://games.kraftylab.com/puzzle\",\r\n    outsidePath: true,\r\n  },\r\n  {\r\n    title: \"Coming Soon\",\r\n    description: \"Check back later!\",\r\n    color:\r\n      \"radial-gradient(218.51% 281.09% at 100% 100%, rgba(92, 118, 255, 0.6) 0%, rgba(158, 225, 236, 0.6) 45.83%, rgba(253, 63, 51, 0.6) 100%)\",\r\n    icon: \"images/icons/comingSoon.svg\",\r\n  },\r\n  {\r\n    title: \"Coming Soon\",\r\n    description: \"Check back later!\",\r\n    color:\r\n      \"radial-gradient(218.51% 281.09% at 100% 100%, rgba(243, 230, 222, 0.6) 0%, rgba(229, 167, 224, 0.6) 45.83%, rgba(253, 63, 51, 0.6) 100%)\",\r\n    icon: \"images/icons/comingSoon.svg\",\r\n  },\r\n];\r\n","const color =\r\n  \"radial-gradient(218.51% 281.09% at 100% 100%, rgba(253, 63, 51, 0.7) 0%, rgba(76, 0, 200, 0.7) 45.83%, rgba(76, 0, 200, 0.7) 100%)\";\r\n\r\nexport const gameRecentData = [\r\n  {\r\n    title: \"Icebreakers\",\r\n    description: \"Let's break that awkward silence in your team!\",\r\n    color:\r\n      \"radial-gradient(218.51% 281.09% at 100% 100%, rgba(179, 202, 248, 0.6) 0%, rgba(181, 205, 251, 0.6) 45.83%, rgba(253, 63, 51, 0.6) 100%)\",\r\n\r\n    icon: \"images/icons/icebreakericon.svg\",\r\n    path: \"/icebreaker\",\r\n    outsidePath: false,\r\n  },\r\n  {\r\n    title: \"Coming Soon\",\r\n    description: \"Check back later!\",\r\n    color:\r\n      \"radial-gradient(218.51% 281.09% at 100% 100%, rgba(189, 202, 236, 0.6) 0%, rgba(233, 225, 255, 0.6) 45.83%, rgba(253, 63, 51, 0.6) 100%)\",\r\n    icon: \"images/icons/comingSoon.svg\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { H3 } from \"../styles/TextStyles\";\r\nimport ReusableTextField from \"../textfield/ReusableTextField\";\r\nimport GameCard from \"../cards/GameCard\";\r\n\r\nimport { gameRecentData } from \"../../data/gameRecentData\";\r\nimport { gameAllData } from \"../../data/gameAllData\";\r\n\r\nexport default function GameSection() {\r\n  const [screenSize, getDimension] = useState({\r\n    dynamicWidth: window.innerWidth,\r\n    dynamicHeight: window.innerHeight,\r\n  });\r\n\r\n  const setDimension = () => {\r\n    getDimension({\r\n      dynamicWidth: window.innerWidth,\r\n      dynamicHeight: window.innerHeight,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", setDimension);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", setDimension);\r\n    };\r\n  }, [screenSize]);\r\n\r\n  function renderDesktop() {\r\n    return (\r\n      <GraphicWrapper>\r\n        <Graphic src=\"images/auth/auth-graphic.svg\" />\r\n      </GraphicWrapper>\r\n    );\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <ContentWrapper>\r\n        <ScreenWrapper>\r\n          <LeftColumnWrapper>\r\n            <LeftColumnTitle>Recent</LeftColumnTitle>\r\n            <LeftGameCardWrapper>\r\n              {gameRecentData.map((item, index) => (\r\n                <GameCard\r\n                  title={item.title}\r\n                  description={item.description}\r\n                  color={item.color}\r\n                  icon={item.icon}\r\n                  iconSize={\"60px\"}\r\n                  path={item.path ? item.path : null}\r\n                  outsidePath={item.outsidePath ? item.outsidePath : false}\r\n                />\r\n              ))}\r\n            </LeftGameCardWrapper>\r\n          </LeftColumnWrapper>\r\n        </ScreenWrapper>\r\n        <ScreenWrapper>\r\n          <RightColumnWrapper>\r\n            <RightColumnTitle>All Games</RightColumnTitle>\r\n            <RightGameCardWrapper>\r\n              {gameAllData.map((item, index) => (\r\n                <GameCard\r\n                  title={item.title}\r\n                  description={item.description}\r\n                  color={item.color}\r\n                  icon={item.icon}\r\n                  iconSize={\"60px\"}\r\n                  path={item.path ? item.path : null}\r\n                  outsidePath={item.outsidePath ? item.outsidePath : false}\r\n                />\r\n              ))}\r\n            </RightGameCardWrapper>\r\n          </RightColumnWrapper>\r\n        </ScreenWrapper>\r\n      </ContentWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 200px;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: grid;\r\n  margin: 0 auto;\r\n  height: 100%;\r\n  grid-template-columns: 40% 60%;\r\n  @media (max-width: 450px) {\r\n    display: inline;\r\n  }\r\n`;\r\n\r\nconst GraphicWrapper = styled.div`\r\n  display: grid;\r\n  height: 100%;\r\n  width: 100%;\r\n  justify-items: center;\r\n  align-content: center;\r\n  @media (max-width: 450px) {\r\n    display: hidden;\r\n  }\r\n`;\r\n\r\nconst Graphic = styled.img`\r\n  width: 75%;\r\n  height: 100%;\r\n`;\r\n\r\nconst ScreenWrapper = styled.div`\r\n  @media (max-width: 450px) {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst LeftColumnWrapper = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 400px;\r\n  @media (max-width: 450px) {\r\n    vertical-align: middle;\r\n    margin: 0;\r\n    padding: 0 30px;\r\n    max-width: none;\r\n  }\r\n`;\r\n\r\nconst RightColumnWrapper = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 750px;\r\n  @media (max-width: 450px) {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst LeftColumnTitle = styled(H3)`\r\n  text-align: left;\r\n  border-bottom: 1px solid #d0d2d3;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 20px;\r\n  width: 300px;\r\n`;\r\n\r\nconst RightColumnTitle = styled(H3)`\r\n  text-align: left;\r\n  border-bottom: 1px solid #d0d2d3;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 20px;\r\n  width: 300px;\r\n`;\r\n\r\nconst LeftGameCardWrapper = styled.div`\r\n  grid-row-gap: 25px;\r\n  display: grid;\r\n  grid-template-rows: 50% 50%;\r\n`;\r\n\r\nconst RightGameCardWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 50% 50%;\r\n  grid-column-gap: 25px;\r\n  grid-row-gap: 25px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Layout from \"../components/layout/layout\";\r\nimport SEO from \"../components/layout/seo\";\r\nimport GameSection from \"../components/sections/GameSection\";\r\nimport GameHeader from \"../components/layout/GameHeader\";\r\nimport { useState, useEffect } from \"react\";\r\nimport UserService from \"../service/UserService\";\r\nimport UnauthorizedSection from \"../components/sections/auth/UnauthorizedSection\";\r\nimport DefaultSpinner from \"../components/spinners/DefaultSpinner\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { UserContext } from \"../providers/userContext\";\r\n\r\nfunction GamePage() {\r\n  const [authenticated, setAuthenticated] = useState();\r\n\r\n  const renderPage = () => {\r\n    if (authenticated == true) {\r\n      return (\r\n        <Layout>\r\n          <SEO title=\"game-portal\" />\r\n          <GameHeader />\r\n          <GameSection />\r\n        </Layout>\r\n      );\r\n    } else if (authenticated == false) {\r\n      return (\r\n        <Layout>\r\n          <GameHeader />\r\n          <UnauthorizedSection />\r\n        </Layout>\r\n      );\r\n    } else {\r\n      return (\r\n        <Layout>\r\n          <Wrapper>\r\n            <ContentWrapper>\r\n              <DefaultSpinner isDark={true} />\r\n            </ContentWrapper>\r\n          </Wrapper>\r\n        </Layout>\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    UserService.validateToken().then((response) => {\r\n      if (isMounted) {\r\n        setAuthenticated(response);\r\n        setTimeout(function () {}, 2000);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return renderPage();\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  display: grid;\r\n  width: 100%;\r\n  top: 200px;\r\n  height: 800px;\r\n  align-content: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: grid;\r\n  height: 200px;\r\n  margin: 0 auto;\r\n  width: 75%;\r\n  justify-content: center;\r\n  align-content: center;\r\n  gap: 30px;\r\n`;\r\n\r\nexport default GamePage;\r\n"],"names":["GameCard","props","title","description","color","icon","iconSize","path","outsidePath","undefined","href","Wrapper","CardWrapper","TextWrapper","GameTitle","Description","IconWrapper","src","alt","className","returnOutsideLink","Link","to","returnLink","returnNoLink","styled","H2","MediumText","MenuButton","item","link","onClick","MenuItem","Title","gamePortalData","Header","isAdmin","Cookies","get","useState","adminGamePortalData","setAdminGamePortalData","useEffect","concat","LinkWrapper","MenuWrapper","count","length","map","index","key","UnauthorizedSection","setTimeout","navigate","ContentWrapper","H1","ReusableTextField","onChange","value","label","Label","InputField","name","type","placeholder","e","minLength","maxLength","required","SmallText","gameAllData","gameRecentData","GameSection","dynamicWidth","window","innerWidth","dynamicHeight","innerHeight","screenSize","getDimension","setDimension","addEventListener","removeEventListener","ScreenWrapper","LeftColumnWrapper","LeftColumnTitle","LeftGameCardWrapper","RightColumnWrapper","RightColumnTitle","RightGameCardWrapper","H3","authenticated","setAuthenticated","UserService","then","response","GameHeader","DefaultSpinner","isDark"],"sourceRoot":""}